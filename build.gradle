plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'me.alexisevelyn'
version '0.0.3-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // License Compatibility - https://opensource.stackexchange.com/a/7908/9726
    // License (Dual Licensed Under EPL v1.0 and LGPL 2.1) - https://logback.qos.ch/license.html
    implementation "ch.qos.logback:logback-core:${project.logback_version}"
    shadow "ch.qos.logback:logback-core:${project.logback_version}"

    // License (Identical to MIT) - http://slf4j.org/license.html
    implementation "org.slf4j:slf4j-api:${project.slf4j_api_version}"
    shadow "org.slf4j:slf4j-api:${project.slf4j_api_version}"

    // License (MIT) - https://github.com/luaj/luaj/blob/master/LICENSE
    implementation "org.luaj:luaj-jse:${project.luaj_version}"
    shadow "org.luaj:luaj-jse:${project.luaj_version}"

    // License (Apache 2.0) - https://github.com/JetBrains/java-annotations/blob/master/LICENSE.txt
    implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

    // License (Apache 2.0) - https://github.com/apache/mina-sshd/blob/master/LICENSE.txt
    // Compatible With MIT According To https://www.quora.com/Is-the-MIT-license-compatible-with-the-Apache-License-Version-2-APLv2
    // Modules - https://github.com/apache/mina-sshd/blob/master/README.md#basic-artifacts-structure
    implementation "org.apache.sshd:sshd-core:${project.apache_mina_sshd_version}"
    shadow "org.apache.sshd:sshd-core:${project.apache_mina_sshd_version}"

    // Licence - https://github.com/stleary/JSON-java/blob/master/LICENSE
    implementation "org.json:json:20200518"
    shadow "org.json:json:20200518"
}

//shadowJar {
//    archiveBaseName.set('shadow')
//    archiveClassifier.set('')
//    archiveVersion.set('')
//}

jar {
    manifest {
        attributes(
            'Main-Class': 'me.alexisevelyn.crewmate.Main'
        )
    }
}

// This is so build time properties like the server version are saved in the jar
// https://stackoverflow.com/a/54006518/6828099
processResources {
    filesMatching('compileTime.properties') {
        expand([build_version: version])
    }
}

test {
    useJUnitPlatform()
}